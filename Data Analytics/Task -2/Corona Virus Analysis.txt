CREATE TABLE corona_virus (
    Province VARCHAR(50),
    Country VARCHAR(50),
    Latitude FLOAT,
    Longitude FLOAT,
    Date DATE,
    Confirmed INT,
    Deaths INT,
    Recovered INT
);


q-1

SELECT *
FROM corona_virus
WHERE Province IS NULL OR
      Country IS NULL OR
      Latitude IS NULL OR
      Longitude IS NULL OR
      Date IS NULL OR
      Confirmed IS NULL OR
      Deaths IS NULL OR
      Recovered IS NULL;


q2
UPDATE corona_virus
SET
    Province = COALESCE(Province, 'Not Available'),
    Country = COALESCE(Country, 'Not Available'),
    Latitude = COALESCE(Latitude, 0.0),
    Longitude = COALESCE(Longitude, 0.0),
    Date = COALESCE(Date, '1970-01-01'::DATE),
    Confirmed = COALESCE(Confirmed, 0),
    Deaths = COALESCE(Deaths, 0),
    Recovered = COALESCE(Recovered, 0);



q3
SELECT COUNT(*) AS total_rows FROM corona_virus;

q4 
SELECT MIN(Date) AS start_date, MAX(Date) AS end_date
FROM corona_virus;


q-5
SELECT EXTRACT(MONTH FROM Date) AS month_number, COUNT(*) AS month_count
FROM corona_virus
GROUP BY month_number
ORDER BY month_number;

q-6
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    EXTRACT(MONTH FROM Date) AS month_num,
    ROUND(AVG(Confirmed), 2) AS confirmed_avg,
    ROUND(AVG(Deaths), 2) AS deaths_avg,
    ROUND(AVG(Recovered), 2) AS recovered_avg
FROM
    corona_virus
GROUP BY
    year_num, month_num
ORDER BY
    year_num, month_num ASC;



q-7
WITH FrequentValues AS (
    SELECT
        EXTRACT(MONTH FROM Date) AS month_num,
        EXTRACT(YEAR FROM Date) AS year_num,
        Confirmed,
        Deaths,
        Recovered,
        RANK() OVER (PARTITION BY EXTRACT(MONTH FROM Date), EXTRACT(YEAR FROM Date) ORDER BY COUNT(*) DESC) AS rank
    FROM
        corona_virus
    GROUP BY
        EXTRACT(MONTH FROM Date), EXTRACT(YEAR FROM Date), Confirmed, Deaths, Recovered
)
SELECT
    month_num,
    year_num,
    Confirmed,
    Deaths,
    Recovered
FROM
    FrequentValues
WHERE
    rank = 1
ORDER BY
    year_num, month_num ASC;

q-8
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    MIN(Confirmed) AS min_confirmed,
    MIN(Deaths) AS min_deaths,
    MIN(Recovered) AS min_recovered
FROM
    corona_virus
GROUP BY
    year_num
ORDER BY
    year_num ASC;


q9-
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    MAX(Confirmed) AS max_confirmed,
    MAX(Deaths) AS max_deaths,
    MAX(Recovered) AS max_recovered
FROM
    corona_virus
GROUP BY
    year_num
ORDER BY
    year_num ASC;



q-10
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    EXTRACT(MONTH FROM Date) AS month_num,
    SUM(Confirmed) AS total_confirmed,
    SUM(Deaths) AS total_deaths,
    SUM(Recovered) AS total_recovered
FROM
    corona_virus
GROUP BY
    year_num, month_num
ORDER BY
    year_num, month_num ASC;


q-11
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    EXTRACT(MONTH FROM Date) AS month_num,
    SUM(Confirmed) AS total_confirmed,
    ROUND(AVG(Confirmed), 2) AS avg_confirmed,
    ROUND(VARIANCE(Confirmed), 2) AS variance_confirmed,
    ROUND(STDDEV(Confirmed), 2) AS standard_dev_confirmed
FROM
    corona_virus
GROUP BY
    year_num, month_num
ORDER BY
    year_num, month_num ASC;

q-12
SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    EXTRACT(MONTH FROM Date) AS month_num,
    SUM(Deaths) AS total_deaths,
    ROUND(AVG(Deaths), 2) AS avg_deaths,
    ROUND(VARIANCE(Deaths), 2) AS variance_deaths,
    ROUND(STDDEV(Deaths), 2) AS standard_dev_deaths
FROM
    corona_virus
GROUP BY
    year_num, month_num
ORDER BY
    year_num, month_num ASC;


q-13

SELECT
    EXTRACT(YEAR FROM Date) AS year_num,
    EXTRACT(MONTH FROM Date) AS month_num,
    SUM(Recovered) AS total_recovered,
    ROUND(AVG(Recovered), 2) AS avg_recovered,
    ROUND(VARIANCE(Recovered), 2) AS variance_recovered,
    ROUND(STDDEV(Recovered), 2) AS standard_dev_recovered
FROM
    corona_virus
GROUP BY
    year_num, month_num
ORDER BY
    year_num, month_num ASC;


q-14
SELECT
    Country,
    SUM(Confirmed) AS total_confirmed_cases
FROM
    corona_virus
GROUP BY
    Country
ORDER BY
    total_confirmed_cases DESC
LIMIT 1;


q-15
WITH rankingCountry AS (
    SELECT
        Country,
        SUM(Deaths) AS total_death_reported,
        RANK() OVER(ORDER BY SUM(Deaths) ASC) AS rank_no
    FROM
        corona_virus
    GROUP BY
        Country
)
SELECT
    Country,
    total_death_reported
FROM
    rankingCountry
WHERE
    rank_no = 1;


q-16
SELECT
    Country,
    SUM(Recovered) AS total_recovered_cases
FROM
    corona_virus
GROUP BY
    Country
ORDER BY
    total_recovered_cases DESC
LIMIT 5;



